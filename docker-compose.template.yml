version: "3.9"
services:

  url-db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: url-db
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: md5
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d monitoring"]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  url-backend:
    build: ./backend
    container_name: url-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file: .env
    networks:
      - monitoring-network
    depends_on:
      url-db:
        condition: service_healthy
    restart: unless-stopped

  url-frontend:
    container_name: url-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Host:Container
    restart: unless-stopped
    networks:
      - monitoring-network
    depends_on:
      - url-backend # Optional: wait for backend to start

  url-pgadmin:
    image: dpage/pgadmin4
    container_name: url-pgadmin
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: triaditya94@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - monitoring-network
    depends_on:
      url-db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pg-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  monitoring-network:
    driver: bridge
