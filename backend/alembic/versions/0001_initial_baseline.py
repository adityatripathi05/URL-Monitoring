"""Initial baseline schema including roles, users, and token_blacklist tables.

Revision ID: 0001_initial_baseline
Revises:
Create Date: YYYY-MM-DD HH:MM:SS.SSSSSS # Replace with actual timestamp

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '0001_initial_baseline'
down_revision = None # This is the first migration
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # From 001_create_roles_table.sql
    op.execute("""
    CREATE TABLE IF NOT EXISTS roles (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name VARCHAR(50) UNIQUE NOT NULL,
        created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
    );
    """)
    op.execute("""
    INSERT INTO roles (name) VALUES ('Admin') ON CONFLICT (name) DO NOTHING;
    """)
    op.execute("""
    INSERT INTO roles (name) VALUES ('Viewer') ON CONFLICT (name) DO NOTHING;
    """)

    # From 002_create_users_table.sql
    op.execute("""
    CREATE TABLE IF NOT EXISTS users (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        username VARCHAR(50) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        is_verified BOOLEAN DEFAULT FALSE,
        timezone VARCHAR(50),
        role_id UUID NOT NULL,
        created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
        FOREIGN KEY (role_id) REFERENCES roles(id)
    );
    """)
    op.execute("""
    CREATE INDEX IF NOT EXISTS idx_users_email ON users (email);
    """)

    # From 003_create_token_blacklist_table.sql
    op.execute("""
    CREATE TABLE IF NOT EXISTS token_blacklist (
        jti VARCHAR(255) PRIMARY KEY,
        expires_at TIMESTAMPTZ NOT NULL
    );
    """)
    op.execute("""
    CREATE INDEX IF NOT EXISTS idx_token_blacklist_expires_at ON token_blacklist (expires_at);
    """)
    op.execute("""
    CREATE INDEX IF NOT EXISTS idx_token_blacklist_jti ON token_blacklist (jti);
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS token_blacklist;")
    op.execute("DROP TABLE IF EXISTS users;")
    op.execute("DROP TABLE IF EXISTS roles;")
    # ### end Alembic commands ###
